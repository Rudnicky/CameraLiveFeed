<Window x:Class="CameraLiveFeed.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:converters="clr-namespace:CameraLiveFeed.Core.Converters;assembly=CameraLiveFeed.Core"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:CameraLiveFeed.Views"
        WindowStartupLocation="CenterScreen"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Background="{DynamicResource Application.Background}"
        mc:Ignorable="d"
        Title="MainWindowView" Height="{DynamicResource Application.Height}" Width="{DynamicResource Application.Width}">
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="60" />
        </Grid.RowDefinitions>
        <views:CameraFinderView />
        <views:MediaPlayerView Grid.Row="1" Margin="10" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.IsMediaPlayerViewVisible}" />
        <Button Grid.Row="2" Command="{Binding TestButtonClickedCommand}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}" Content="{Binding ButtonTextTest}">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsBusy}" Value="True">
                            <Setter Property="Background" Value="CadetBlue" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
